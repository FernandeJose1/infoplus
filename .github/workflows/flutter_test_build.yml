name: CI Flutter ─ Test & Debug APK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Cache de pacotes pub
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Configurar Flutter (estável)
        uses: subosito/flutter-action@v2
        with:
          channel: stable         # Puxa sempre o último stable (≥3.22) 5

      - name: Verificar versão
        run: flutter --version

      - name: Instalar dependências
        run: flutter pub get

      - name: Gerar código (build_runner)
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Executar testes unitários
        run: flutter test

      - name: Adicionar google-services.json
        run: |
          mkdir -p android/app
          echo "${{ secrets.FIREBASE_ANDROID_JSON }}" > android/app/google-services.json

      - name: Compilar APK Debug
        run: flutter build apk --debug

      - name: Upload do APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: infoplus-debug-${{ matrix.os }}
          path: build/app/outputs/flutter-apk/app-debug.apk