name: CI Flutter ─ Test & Debug APK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Cache de pacotes pub
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Configurar Flutter (estável)
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Verificar versão
        run: flutter --version

      # 1) Remover Android antigo e criar novo embedding v2
      - name: Regenerar pasta Android
        run: |
          rm -rf android/
          flutter create . --platforms=android

      # 2) Sobrescrever build.gradle com todas as customizações
      - name: Substituir android/app/build.gradle
        run: |
          cat > android/app/build.gradle << 'EOF'
          def flutterRoot = localProperties.getProperty('flutter.sdk')
          def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
          def flutterVersionName = localProperties.getProperty('flutter.versionName')

          apply plugin: 'com.android.application'
          apply plugin: 'kotlin-android'
          apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

          android {
              namespace 'com.ussd.infoplus'
              compileSdkVersion 33
              ndkVersion "27.0.12077973"

              defaultConfig {
                  applicationId "com.ussd.infoplus"
                  minSdkVersion 23
                  targetSdkVersion 33
                  versionCode flutterVersionCode.toInteger()
                  versionName flutterVersionName
                  multiDexEnabled true
              }

              buildTypes {
                  release {
                      shrinkResources false
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }

              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_17
                  targetCompatibility JavaVersion.VERSION_17
              }

              kotlinOptions {
                  jvmTarget = '17'
              }
          }

          flutter {
              source '../..'
          }

          dependencies {
              implementation 'androidx.multidex:multidex:2.0.1'
          }
          EOF

      - name: Instalar dependências
        run: flutter pub get

      - name: Gerar código (build_runner)
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Executar testes unitários
        run: flutter test

      - name: Adicionar google-services.json
        run: |
          mkdir -p android/app
          echo "${{ secrets.FIREBASE_ANDROID_JSON }}" > android/app/google-services.json

      - name: Compilar APK Debug
        run: flutter build apk --debug

      - name: Upload do APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: infoplus-debug-${{ matrix.os }}
          path: build/app/outputs/flutter-apk/app-debug.apk